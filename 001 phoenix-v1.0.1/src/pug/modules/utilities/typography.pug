extends ../../layouts/LayoutComponent
include ../../mixins/utilities/Text

append variables
  
  -
    var pageHeader = {
      title: 'Typography',
      description: 'Documentation and examples for common text utilities to control alignment, wrapping, weight, and more.',
      url: `https://getbootstrap.com/docs/${bootstrapVersion}/utilities/text/`,
      linkText: 'Spacing on Bootstrap'
    }
  -
    var rightNav = [
      {
        name: 'Text alignment',
        id: '#text-alignment',
      },
      {
        name: 'Text wrapping and overflow',
        id: '#text-wrapping-and-overflow',
      },
      {
        name: 'Word break',
        id: '#word-break'
      },
      {
        name: 'Text transform',
        id: '#text-transform'
      },
      {
        name: 'Font size',
        id: '#font-size'
      },
      {
        name: 'Font weight and italics',
        id: '#font-weight-and-italics'
      },
      {
        name: 'Line height',
        id: '#line-height'
      },
      {
        name: 'Heading',
        id: '#heading'
      },
      {
        name: 'Heading classes',
        id: '#heading-classes'
      },
      {
        name: 'Display',
        id: '#display'
      },
      {
        name: 'Font family',
        id: '#font-family'
      },
      {
        name: 'Reset color',
        id: '#reset-color'
      },
      {
        name: 'Text decoration',
        id: '#text-decoration'
      },
    ]

block component
  
  +ComponentCard({
    title: 'Text alignment',
    anchor: true,
    description: 'Easily realign text to components with text alignment classes. For start, end, and center alignment, responsive classes are available that use the same viewport width breakpoints as the grid system.'
  }).my-5
    +TextAlignmentDemo

  +ComponentCard({
    title: 'Text wrapping and overflow',
    anchor: true,
    description: 'Wrap text with a <code>.text-wrap</code> class. Prevent text from wrapping with a <code>.text-nowrap</code> class.'
  }).my-5
    +TextWrappingOverflowDemo

  +ComponentCard({
    title: 'Word break',
    anchor: true,
    description: 'Prevent long strings of text from breaking your component\'s layout by using <code>.text-break</code> to set <code>word-wrap: break-word</code> and <code>word-break: break-word</code>. We use <code>word-wrap</code> instead of the more common <code>overflow-wrap</code> for wider browser support, and add the deprecated <code>word-break: break-word</code> to avoid issues with flex containers.'
  }).my-5
    +WordBreakDemo

  +ComponentCard({
    title: 'Text transform',
    anchor: true,
    description: 'Transform text in components with text capitalization classes.'
  }).my-5
    +TextTransformationDemo

  +ComponentCard({
    title: 'Font size',
    anchor: true,
    description: 'Quickly change the <code>font-size</code> of text. While our heading classes (e.g., <code>.h1</code>–<code>.h6</code>) apply <code>font-size</code>, <code>font-weight</code>, and <code>line-height</code>, these utilities <em>only</em> apply <code>font-size</code>. Sizing for these utilities matches HTML’s heading elements, so as the number increases, their size decreases.'
  }).my-5
    +FontSizeDemo

  +ComponentCard({
    title: 'Font weight',
    anchor: true,
    description: 'Quickly change the <code>font-weight</code> or <code>font-style</code> of text with these utilities. <code>font-style</code> utilities are abbreviated as <code>.fst-*</code> and <code>font-weight</code> utilities are abbreviated as <code>.fw-*</code>.'
  }).my-5
    +FontWeightDemo

  +ComponentCard({
    title: 'Line height',
    anchor: true,
    description: 'Change the line height with <code>.lh-*</code> utilities.',
  }).my-5
    +LineHeightDemo

  +ComponentCard({
    title: 'Heading',
    anchor: true,
  }).my-5
    +TypographyHeadingDemo

  +ComponentCard({
    title: 'Heading classes',
    anchor: true,
  }).my-5
    +TypographyHeadingClassDemo

  +ComponentCard({
    title: 'Display',
    anchor: true,
  }).my-5
    +TypographyDisplayHeadingDemo

  +ComponentCard({
    title: 'Font family',
    anchor: true,
    description: 'You have three font-family helper classes available to use.',
  }).my-5
    +FontFamilyDemo

  +ComponentCard({
    title: 'Reset color',
    anchor: true,
    description: 'Reset a text or link\'s color with <code>.text-reset</code>, so that it inherits the color from its parent.',
  }).my-5
    +ResetColorDemo


  +ComponentCard({
    title: 'Text decoration',
    anchor: true,
    description: 'Decorate text in components with text decoration classes.'
  }).my-5
    +TextDecorationDemo

