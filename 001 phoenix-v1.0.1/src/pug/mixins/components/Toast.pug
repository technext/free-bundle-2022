mixin ToastBasicExampleDemo
  .toast.show(role='alert' aria-live='assertive' aria-atomic='true' data-bs-autohide="false")
    .toast-header
      = '\n'
      strong.me-auto Bootstrap
      small 11 mins ago
      = '\n'
      button.ms-2.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
    .toast-body
      | Hello, world! This is a toast message.

mixin ToastPlacement
  form
    .mb-3
      label(for='selectToastPlacement') Toast placement
      select#selectToastPlacement.form-select.mt-2
        option(value='', selected='') Select a position...
        option(value='top-0 start-0') Top left
        option(value='top-0 start-50 translate-middle-x') Top center
        option(value='top-0 end-0') Top right
        option(value='top-50 start-0 translate-middle-y') Middle left
        option(value='top-50 start-50 translate-middle') Middle center
        option(value='top-50 end-0 translate-middle-y') Middle right
        option(value='bottom-0 start-0') Bottom left
        option(value='bottom-0 start-50 translate-middle-x') Bottom center
        option(value='bottom-0 end-0') Bottom right
  .bg-dark.position-relative.bd-example-toasts(aria-live='polite', aria-atomic='true')
    #toastPlacement.toast-container.position-absolute.p-3
      .toast
        .toast-header
          img.rounded.me-2(src='...', alt='...')
          strong.me-auto Bootstrap
          small 11 mins ago
        .toast-body
          | Hello, world! This is a toast message.


mixin ToastStackingDescription
  p&attributes(attributes) When you have multiple toasts, we default to vertically stacking them in a readable manner.

mixin ToastStackingDemo
  .toast.show.mb-2(role='alert' aria-live='assertive' aria-atomic='true')
    .toast-header
      = '\n'
      strong.me-auto Bootstrap
      = '\n'
      small.text-muted just now
        = '\n'
      button.ms-2.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
      = '\n'
    .toast-body
      | See? Just like this.
  .toast.show(role='alert' aria-live='assertive' aria-atomic='true')
    .toast-header
      = '\n'
      strong.me-auto Bootstrap
      small.text-muted 2 seconds ago
      = '\n'
      button.ms-2.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
    .toast-body
      | Heads up, toasts will stack automatically

   
mixin ToastRightPlaceDemo
  .position-relative.mb-4(aria-live='polite' aria-atomic='true' style='min-height: 130px;')
    .toast.show.position-absolute.top-0.end-0
      .toast-header
        = '\n'
        strong.me-auto Bootstrap
        = '\n'
        small 11 mins ago
        = '\n'
        button.ms-2.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
      .toast-body
        | Hello, world! This is a toast message.


mixin ToastMiddlePlaceDemo
  .d-flex.flex-center(aria-live='polite' aria-atomic='true' style='min-height: 300px;')
    .toast.show(role='alert' data-bs-autohide='false' aria-live='assertive' aria-atomic='true')
      .toast-header
        strong.me-auto Bootstrap
        = '\n'
        small 11 mins ago
        = '\n'
        button.ms-2.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
      .toast-body
        | Hello, world! This is a toast message.

mixin LiveToastDemo
  button.btn.btn-primary#liveToastBtn(type='button') Show live toast
  .position-fixed.bottom-0.end-0.p-3(style='z-index: 5')
    #liveToast.toast.fade(role='alert' aria-live='assertive' aria-atomic='true')
      .toast-header
        = '\n'
        strong.me-auto Bootstrap
        = '\n'
        small 11 mins ago
        = '\n'
        button.btn-close.btn-close-white(type='button' data-bs-dismiss='toast' aria-label='Close')
      .toast-body
        | Hello, world! This is a toast message.

mixin TranslucentDemo
  .toast.show(role='alert' data-bs-autohide='false' aria-live='assertive' aria-atomic='true')
    .toast-header
      = '\n'
      strong.me-auto Bootstrap
      = '\n'
      small.text-muted 11 mins ago
      = '\n'
      button.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
    .toast-body
      | Hello, world! This is a toast message.
      

mixin ToastColorSchemesDemo
  .d-flex
    .toast.show.align-items-center.text-white.bg-primary.border-0(role='alert' data-bs-autohide='false' aria-live='assertive' aria-atomic='true')
      .d-flex
        .toast-body
          = '\n'  
          | Hello, world! This is a toast message.
          = '\n'
        = '\n'
        button.btn-close.btn-close-white.ms-2.m-auto(type='button' data-bs-dismiss='toast' aria-label='Close')

mixin CustomContentDemo
  .toast.show.align-items-center(role='alert' data-bs-autohide='false' aria-live='assertive' aria-atomic='true')
    .d-flex
      .toast-body
        | Hello, world! This is a toast message.
      = '\n'
      button.btn-close.m-auto(type='button' data-bs-dismiss='toast' aria-label='Close')
    .py-3.border-top
      = '\n'
      button.btn.btn-primary.btn-sm(type='button') Take action
      = '\n'
      button.btn.btn-secondary.btn-sm.ms-2(type='button' data-bs-dismiss='toast') Close

        

